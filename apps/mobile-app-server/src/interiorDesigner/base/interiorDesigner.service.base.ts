/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  InteriorDesigner as PrismaInteriorDesigner,
} from "@prisma/client";

export class InteriorDesignerServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InteriorDesignerCountArgs, "select">
  ): Promise<number> {
    return this.prisma.interiorDesigner.count(args);
  }

  async interiorDesigners(
    args: Prisma.InteriorDesignerFindManyArgs
  ): Promise<PrismaInteriorDesigner[]> {
    return this.prisma.interiorDesigner.findMany(args);
  }
  async interiorDesigner(
    args: Prisma.InteriorDesignerFindUniqueArgs
  ): Promise<PrismaInteriorDesigner | null> {
    return this.prisma.interiorDesigner.findUnique(args);
  }
  async createInteriorDesigner(
    args: Prisma.InteriorDesignerCreateArgs
  ): Promise<PrismaInteriorDesigner> {
    return this.prisma.interiorDesigner.create(args);
  }
  async updateInteriorDesigner(
    args: Prisma.InteriorDesignerUpdateArgs
  ): Promise<PrismaInteriorDesigner> {
    return this.prisma.interiorDesigner.update(args);
  }
  async deleteInteriorDesigner(
    args: Prisma.InteriorDesignerDeleteArgs
  ): Promise<PrismaInteriorDesigner> {
    return this.prisma.interiorDesigner.delete(args);
  }
}
